name: Build

on: 
  #push:
    #branches:      
      # Release branches
      #- "[0-9]+.[0-9]+.X"
      
  # Manual run
  workflow_dispatch:
  
jobs: 
  build_universal_wheel:
    name: Build universal wheel
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: ['3.9']
        include:
          - os: ubuntu-20.04
            arch: "x86_64"
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
      
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python }}     

    - name: Build sdist
      run: |                       
        python -m build --sdist --wheel .

    - name: Save sdist
      uses: actions/upload-artifact@v2
      with:
        path: dist/*.whl
        if-no-files-found: error
        
  upload_pypi_test:
    name: Upload to PyPI test
    needs: [build_universal_wheel]
    runs-on: ubuntu-latest
    # upload to PyPI test only for pushes to 'deploy-pypi-test' 
    if: github.event_name == 'push' && github.ref == 'refs/heads/deploy-pypi-test'
    steps:                       
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
          
      - name: Publish package to TestPyPI      
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: ${{ secrets.test_pypi_username }}
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/    
          
  upload_pypi:
    name: Upload to PyPI
    needs: [build_universal_wheel]
    runs-on: ubuntu-latest
    # upload to PyPI only for pushes to 'deploy-pypi' 
    if: github.event_name == 'push' && github.ref == 'refs/heads/deploy-pypi'
    steps:                       
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
          
      - name: Publish package to PyPI      
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: ${{ secrets.pypi_username }}
          password: ${{ secrets.pypi_password }}               
